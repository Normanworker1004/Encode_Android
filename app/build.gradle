plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.devtools.ksp'
    id 'dagger.hilt.android.plugin'
    id 'com.datadoghq.dd-sdk-android-gradle-plugin' version '1.12.0'
    id "com.google.protobuf" version '0.9.0'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('keystore.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

kotlin {

    sourceSets {

        debug {
            kotlin.srcDir("build/generated/ksp/debug/kotlin")
        }
        release {
            kotlin.srcDir("build/generated/ksp/release/kotlin")
        }

    }

}

android {
    namespace 'com.sweetwater.encore'
    compileSdk 34

    defaultConfig {
        applicationId "com.sweetwater.encore"
        minSdk 29
        targetSdk 34
        versionCode 3
        versionName "1.0.10"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file("../app/keystore.jks")
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        debug {
            // Service base URLs
            buildConfigField "String", "INVENTORY_API_PHX_BASE_URL", "\"https://dev-dc-api-phx.dev.gcp.sweetwater.com/inventory\""
            buildConfigField "String", "INVENTORY_API_FWA_BASE_URL", "\"https://dev-dc-api-fwa.dev.gcp.sweetwater.com/inventory\""
            buildConfigField "String", "PRODUCTS_API_BASE_URL", "\"https://dev-dc-api.sweetwater.com/products\""
            buildConfigField "String", "BOX_AUDIT_API_FWA_BASE_URL", "\"https://dev-dc-api-fwa.dev.gcp.sweetwater.com/pack\""
            buildConfigField "String", "BOX_AUDIT_API_PHX_BASE_URL", "\"https://dev-dc-api-phx.dev.gcp.sweetwater.com/pack\""
            buildConfigField "String", "DC_SERVICE_BASE_URL", "\"https://dev-dc-service.sweetwater.com\""

            // MQTT Config Values
            buildConfigField "String", "MQTT_SERVER_URL", "\"emqx-gcp.sweetwater.com\""
            buildConfigField "int", "MQTT_SERVER_PORT", "1883"

            // Datadog Configuration
            buildConfigField "String", "DATADOG_ENV", "\"dev\""
            buildConfigField "String", "DATADOG_CLIENT_TOKEN", "\"pub5c1717dd0b6a8cc207b6fdee8c2ad71d\""
            buildConfigField "String", "DATADOG_APPLICATION_ID", "\"9e86d2ba-13f6-40ed-8c4c-840884ea38d1\""

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            // GDS
            buildConfigField "String", "GDS_BASE_URL", "\"https://gds.dev.gcp.sweetwater.com\""
        }
        release {
            // Service base URLs
            buildConfigField "String", "INVENTORY_API_PHX_BASE_URL", "\"https://dc-api-phx.sweetwater.com/inventory\""
            buildConfigField "String", "INVENTORY_API_FWA_BASE_URL", "\"https://dc-api-fwa.sweetwater.com/inventory\""
            buildConfigField "String", "PRODUCTS_API_BASE_URL", "\"https://dc-api.sweetwater.com/products\""
            buildConfigField "String", "BOX_AUDIT_API_FWA_BASE_URL", "\"https://dc-api-fwa.gcp.sweetwater.com/pack\""
            buildConfigField "String", "BOX_AUDIT_API_PHX_BASE_URL", "\"https://dc-api-phx.gcp.sweetwater.com/pack\""
            buildConfigField "String", "DC_SERVICE_BASE_URL", "\"https://dc-service.sweetwater.com\""

            // MQTT Config Values
            buildConfigField "String", "MQTT_SERVER_URL", "\"emqx-gcp.sweetwater.com\""
            buildConfigField "int", "MQTT_SERVER_PORT", "1883"

            // Datadog Configuration
            buildConfigField "String", "DATADOG_ENV", "\"production\""
            buildConfigField "String", "DATADOG_CLIENT_TOKEN", "\"pub5c1717dd0b6a8cc207b6fdee8c2ad71d\""
            buildConfigField "String", "DATADOG_APPLICATION_ID", "\"9e86d2ba-13f6-40ed-8c4c-840884ea38d1\""

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            // GDS
            buildConfigField "String", "GDS_BASE_URL", "\"https://gds.sweetwater.com\""

            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_19
        targetCompatibility JavaVersion.VERSION_19
    }
    kotlinOptions {
        jvmTarget = '19'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.4'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/*'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.1'
    implementation "androidx.compose.ui:ui:1.4.0"
    implementation "androidx.compose.ui:ui-tooling-preview:1.4.0"
    implementation 'androidx.compose.material:material:1.2.0'

    //MQTT
    implementation("com.hivemq:hivemq-mqtt-client:1.3.3")

    // Navigation Compose
    implementation("androidx.navigation:navigation-compose:2.5.2")

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'
    implementation files('libs/barcodeapi.jar')
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"

    implementation 'androidx.work:work-runtime-ktx:2.7.1'

    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"

    //Dagger - Hilt
    implementation "com.google.dagger:hilt-android:2.49"
    kapt "com.google.dagger:hilt-android-compiler:2.49"
    kapt "androidx.hilt:hilt-compiler:1.0.0"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'

    implementation(platform("com.squareup.okhttp3:okhttp-bom:4.10.0"))

    implementation "com.squareup.okhttp3:okhttp"
    implementation "com.squareup.okhttp3:logging-interceptor"

    implementation 'com.google.code.gson:gson:2.9.0'

    // Compose Nav Destinations
    implementation("io.github.raamcosta.compose-destinations:core:1.5.5-beta")
    ksp("io.github.raamcosta.compose-destinations:ksp:1.5.5-beta")

    implementation "androidx.compose.animation:animation:1.4.0"
    implementation 'com.datadoghq:dd-sdk-android:1.17.1'

    implementation("io.coil-kt:coil:2.4.0")
    implementation("io.coil-kt:coil-compose:2.4.0")

    testImplementation 'junit:junit:4.13.2'

    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:1.4.0"
    debugImplementation "androidx.compose.ui:ui-tooling:1.4.0"
    debugImplementation "androidx.compose.ui:ui-test-manifest:1.4.0"

    implementation "androidx.datastore:datastore:1.0.0"
    // Starting from Protobuf 3.8.0, use the lite runtime library
    implementation "com.google.protobuf:protobuf-javalite:3.21.7"

    // CameraX
    def camerax_version = "1.2.2"
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    implementation "androidx.camera:camera-video:${camerax_version}"

    implementation "androidx.camera:camera-view:${camerax_version}"
    implementation "androidx.camera:camera-extensions:${camerax_version}"

    // Permissions
    implementation("com.google.accompanist:accompanist-permissions:0.18.0")
}

protobuf {
    // Configures the Protobuf compilation and the protoc executable
    protoc {
        artifact = 'com.google.protobuf:protoc:3.25.1'
    }

    // Generates the java Protobuf-lite code for the Protobufs in this project
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                // Configures the task output type
                java {
                    // Java Lite has smaller code size and is recommended for Android
                    option 'lite'
                }
            }
        }
    }
}

kapt {
    correctErrorTypes true
}
